name: Test Decryption

on:
  workflow_dispatch:  # Triggered manually from GitHub Actions UI

jobs:
  test-decryption:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read  # Allow read permissions to access files

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create encrypted keystore file
      run: echo "${{ secrets.RELEASE_KEYSTORE }}" > smartautoclicker.jks.asc

    - name: Decrypt Keystore
      run: |
        echo "Decrypting keystore..."
        gpg --batch --yes --decrypt --passphrase ${{ secrets.RELEASE_KEYSTORE_PASSPHRASE }} --output smartautoclicker/smartautoclicker.jks smartautoclicker.jks.asc

    - name: Validate Decryption
      run: |
        if [ -f smartautoclicker/smartautoclicker.jks ]; then
          echo "Decryption successful!"
        else
          echo "Decryption failed!"
          exit 1
        fi

    - name: Validate Keystore Password
      run: |
        echo "Validating keystore password..."
        keytool -list -keystore smartautoclicker/smartautoclicker.jks -storepass "${{ secrets.SIGNING_STORE_PASSWORD }}" -alias "${{ secrets.SIGNING_KEY_ALIAS }}" > /dev/null 2>&1
        if [ $? -eq 0 ]; then
          echo "Keystore password is valid!"
        else
          echo "Keystore password is invalid!"
          exit 1
        fi

    - name: Validate Key Alias
      run: |
        echo "Validating key alias..."
        keytool -list -keystore smartautoclicker/smartautoclicker.jks -storepass "${{ secrets.SIGNING_STORE_PASSWORD }}" -alias "${{ secrets.SIGNING_KEY_ALIAS }}" > /dev/null 2>&1
        if [ $? -eq 0 ]; then
          echo "Key alias is valid!"
        else
          echo "Key alias is invalid!"
          exit 1
        fi

    - name: Validate Key Password
      run: |
        echo "Validating key password..."
        keytool -list -keystore smartautoclicker/smartautoclicker.jks -storepass "${{ secrets.SIGNING_STORE_PASSWORD }}" -alias "${{ secrets.SIGNING_KEY_ALIAS }}" -keypass "${{ secrets.SIGNING_KEY_PASSWORD }}" > /dev/null 2>&1
        if [ $? -eq 0 ]; then
          echo "Key password is valid!"
        else
          echo "Key password is invalid!"
          exit 1
        fi
